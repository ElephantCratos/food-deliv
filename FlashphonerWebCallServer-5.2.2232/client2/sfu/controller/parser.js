const statsToGraph=function(t){let e={nodes:[],edges:[]};const i="WCS",c="curvedArrow";let a=0;const n="#00ff40",o="#3a8dc6",s="#ff2800";e.nodes.push({id:i,label:i,x:0,y:0,size:5,color:n});const r=function(t,e){const i=[],c=360/e*Math.PI/180;for(let t=0;t<e;t++){let e=t*c,a=800*Math.cos(e),n=800*Math.sin(e);i.push({x:a,y:n})}return i}(0,t.participants.length);return t.participants.forEach((function(t){let u=0,p=r.pop();e.nodes.push({id:t.nickName,label:t.nickName,x:p.x,y:p.y,size:5,color:o}),t.outgoingTracks.forEach((function(n){if(n.composite)for(const[r,p]of Object.entries(n.tracks))e.edges.push({id:"e"+a,source:t.nickName,target:i,label:p.id+"-"+r,count:u++,size:2,type:c,color:p.alive?o:s}),a++;else e.edges.push({id:"e"+a,source:t.nickName,target:i,label:n.id,count:u++,size:2,type:c,color:n.alive?o:s}),a++})),t.incomingTracks.forEach((function(o){e.edges.push({id:"e"+a,source:i,target:t.nickName,label:o.quality?o.id+"-"+o.quality:o.id,count:u++,size:2,type:c,color:n}),a++}))})),e},statsToTable=function(t){const e="NA",i=function(t,e){return t&&e?t.replaceAll(" ","")+e.replaceAll(" ",""):t},c=function(t,e,i){return{metric:"track",type:t.type,participant:e,id:t.id,quality:i,details:t}},a=function(t,i,c){return{metric:t,type:i,participant:c,id:e,quality:e,details:{}}},n={WCS:[]};let o=0,s=0;const r={};t.participants.forEach((function(t){t.outgoingTracks.forEach((function(e){if(e.composite)for(const[c,a]of Object.entries(e.tracks))r[i(a.id,c)]=a,a.nickName=t.nickName,o+=a.bitrate,s++;else r[i(e.id)]=e,e.nickName=t.nickName,o+=e.bitrate,s++}))}));let u=0,p=0;return t.participants.forEach((function(t){t.incomingTracks.forEach((function(t){const e=r[i(t.id,t.quality)];e&&(u+=e.bitrate,p++)}))})),n.WCS.push(a("participants",t.participants.length,e)),n.WCS.push(a("bitrate_in",o,e)),n.WCS.push(a("bitrate_out",u,e)),n.WCS.push(a("tracks_in",s,e)),n.WCS.push(a("tracks_out",p,e)),t.participants.forEach((function(t){const e=[];let o=0,s=0,u=0,p=0,l=0,f=0,k=0;t.outgoingTracks.forEach((function(i){if(i.composite)for(const[a,n]of Object.entries(i.tracks))e.push(c(n,t.nickName,a)),s++,p+=n.bitrate;else e.push(c(i,t.nickName,"NA")),s++,p+=i.bitrate,"video"===i.type&&i.feedbackStats&&(f+=i.feedbackStats.receivedFIR,k+=i.feedbackStats.receivedPLI,l+=i.feedbackStats.receivedNACK)})),t.incomingTracks.forEach((function(t){const a=r[i(t.id,t.quality)];a&&(e.push(c(a,a.nickName,t.quality||"NA")),o++,u+=a.bitrate)})),e.push(a("tracks_in",o,t.nickName)),e.push(a("bitrate_in",u,t.nickName)),e.push(a("tracks_out",s,t.nickName)),e.push(a("bitrate_out",p,t.nickName)),e.push(a("nack_out",l,t.nickName)),e.push(a("pli_out",k,t.nickName)),e.push(a("fir_out",f,t.nickName)),n[t.nickName]=e})),n};