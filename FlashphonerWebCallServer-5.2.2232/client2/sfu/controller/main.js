const config={intervals:{poll:3e3}},connect=function(){let e=!1;const t=document.getElementById("url"),n=document.getElementById("roomName"),o=document.getElementById("rawContent"),i=document.getElementById("startButton"),l=document.getElementById("freeze");i.disabled=!0,t.disabled=!0,n.disabled=!0;const a=t.value,c=n.value,s=createConnection(a,c);let d;const r=function(){s.stats().then((function(t){e||(g(t),d=setTimeout(r,config.intervals.poll))}),(function(t){console.log("Failed to poll stats "+t),e||(o.innerHTML="Failed to poll stats "+t,d=setTimeout(r,config.intervals.poll))}))};l.addEventListener("click",(function(){"Freeze"===l.innerText?(e=!0,clearTimeout(d),l.innerText="Unfreeze"):(e=!1,r(),l.innerText="Freeze")})),l.disabled=!1;const u=createGraphView("sigmaContainer"),m=createMetricTable();let f,T;const g=function(e){o.innerHTML=JSON.stringify(e,null,2),f=statsToTable(e),T=statsToGraph(e),u.refreshSigma(T);const t=[];for(const[e,n]of Object.entries(f))t.push(...n);m.updateMetricTable(t,"WCS")};u.bindNodeClickEvents((function(e){m.updateMetricTable(f[e.data.node.id],e.data.node.id)})),r()};