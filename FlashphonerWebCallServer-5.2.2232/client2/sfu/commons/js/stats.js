const Threshold=function(e,t){const r={parameter:e,maxLeap:t,filter:SFU.createFilter(),previousValue:-1,isReached:function(s){let h=!1;if(s&&e in s){let o=r.filter.filter(s[e]);r.previousValue>-1&&Math.round(Math.abs(o-r.previousValue))>t&&(h=!0),r.previousValue=o}return h}};return r},Thresholds=function(){const e={thresholds:{},add:function(t,r){e.thresholds[t]||(e.thresholds[t]=new Threshold(t,r))},remove:function(t){e.thresholds[t]&&delete e.thresholds[t]},isReached:function(t){let r=!1;return Object.keys(e.thresholds).forEach((s=>{r=r||e.thresholds[s].isReached(t)})),r}};return e};